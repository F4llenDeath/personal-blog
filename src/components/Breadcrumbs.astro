---
import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
  BreadcrumbSeparator,
} from '@/components/ui/breadcrumb'
import { Icon } from 'astro-icon/components'
import { getLangFromUrl, useTranslations } from 'src/i18n/util.ts'
import { ui, defaultLang } from 'src/i18n/ui'

export interface BreadcrumbItem {
  href?: string
  label: keyof typeof ui[typeof defaultLang] | string
  icon?: string
}

interface Props {
  items: BreadcrumbItem[]
}

const { items } = Astro.props
const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
---

<Breadcrumb>
  <BreadcrumbList>
    <BreadcrumbItem>
      <BreadcrumbLink href="/">
        <Icon name="lucide:home" class="size-4" />
      </BreadcrumbLink>
    </BreadcrumbItem>
    {
      items.map((item, index) => (
        <>
          <BreadcrumbSeparator />
          <BreadcrumbItem>
            {index === items.length - 1 ? (
              <BreadcrumbPage>
                <span class="flex items-center gap-x-2">
                  {item.icon && <Icon name={item.icon} class="size-4" />}
                  {typeof item.label === 'string' && item.label in ui[lang]
                    ? t(item.label as keyof typeof ui[typeof defaultLang])
                    : item.label}
                </span>
              </BreadcrumbPage>
            ) : (
              <BreadcrumbLink href={item.href}>
                <span class="flex items-center gap-x-2">
                  {item.icon && <Icon name={item.icon} class="size-4" />}
                  {typeof item.label === 'string' && item.label in ui[lang]
                    ? t(item.label as keyof typeof ui[typeof defaultLang])
                    : item.label}
                </span>
              </BreadcrumbLink>
            )}
          </BreadcrumbItem>
        </>
      ))
    }
  </BreadcrumbList>
</Breadcrumb>
